------------------------------------------------------------------------------------------------------------------------

The DataContract project exercises WCF's data contracts.

Some resources on DataContract

Serialization and Deserialization
http://msdn2.microsoft.com/en-us/library/ms731073.aspx

DataContractAttribute Class
http://msdn2.microsoft.com/en-us/library/system.runtime.serialization.datacontractattribute.aspx

Generating a WCF Client from Service Metadata  
http://msdn2.microsoft.com/en-us/library/aa751905.aspx

------------------------------------------------------------------------------------------------------------------------

Here are the main points:

When we start from "code", we can derive a schema that comes close to the original schema.
That is:
 - Original schema for comparison: Data/Invoice.xsd.
 - Data contracts: DataContract/Invoice.cs
 - Derived schema: DataContract/Invoice.xsd
To this end, we have to specify the right namespace and the order of children.
The remaining difference is an extra wrapper element for repeating invoice positions.
Hence, the derived schema defines a different XML language.
Less importantly, the style of the derived schema differs from the original one.

Command line:
C:\sd\LinqToXsd\XObjectsSamples\XmlObjects\DataContract>"C:\Program Files\Microsoft SDKs\Windows\v6.0\Bin\SvcUtil" /dconly bin\Debug\DataContract.dll

------------------------------------------------------------------------------------------------------------------------

When we start from the original schema, we cannot generate data contracts because the schema is not supported.
So we could either use xsd.exe or the /importXmlTypes option of SvcUtil.exe.
If we try the latter, we get an Invoice class (cf. Invoice2.cs) that uses a DOM-like representation.

Command line:

C:\sd\LinqToXsd\XObjectsSamples\XmlObjects\Data>"C:\Program Files\Microsoft SDKs\Windows\v6.0\Bin\SvcUtil" /dconly Invoice.xsd
Microsoft (R) Service Model Metadata Tool
[Microsoft (R) Windows (R) Communication Foundation, Version 3.0.4506.30]
Copyright (c) Microsoft Corporation.  All rights reserved.

Error: Type 'Invoice' in namespace 'http://www.vertical.com/Invoice' cannot be imported.
'maxOccurs' on element 'Position' must be 1. Either change the schema so that the types can
map to data contract types or use ImportXmlType or use a different serializer.

If you are using the /dataContractOnly option to import data contract types and are
getting this error message, consider using xsd.exe instead. Types generated by xsd.exe
may be used in the Windows Communication Foundation afte applying the
XmlSerializerFormatAttribute attribute on your service contract. Alternatively, consider
using the /importXmlTypes option to import these types as XML types to use with
DataContractFormatAttribute attribute on your service contract.

------------------------------------------------------------------------------------------------------------------------

Of course, we can also re-generate data contracts from the schema that has been extracted from data contracts.
Cf. Invoice3.cs

------------------------------------------------------------------------------------------------------------------------
